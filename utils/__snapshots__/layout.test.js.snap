// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Layout Buttons <DangerBtn /> render without crashing 1`] = `
<View
  accessible={true}
  isTVSelectable={true}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "backgroundColor": "#bd2130",
      "borderRadius": 7,
      "height": 45,
      "marginBottom": 20,
      "marginLeft": 40,
      "marginRight": 40,
      "opacity": 1,
      "padding": 10,
    }
  }
>
  <Text
    style={
      Object {
        "color": "#fff",
        "fontSize": 22,
        "textAlign": "center",
      }
    }
  >
    
     
    DANGER
  </Text>
</View>
`;

exports[`Layout Buttons <InvertBtn /> render without crashing 1`] = `
<View
  accessible={true}
  isTVSelectable={true}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "backgroundColor": "#fff",
      "borderRadius": 7,
      "height": 45,
      "marginLeft": 40,
      "marginRight": 40,
      "opacity": 1,
    }
  }
>
  <Text
    style={
      Array [
        Object {
          "color": "#fff",
          "fontSize": 22,
          "textAlign": "center",
        },
        Object {
          "color": "#708090",
        },
      ]
    }
  >
    
     
    SUBMIT
  </Text>
</View>
`;

exports[`Layout Buttons <LinkBtn /> render without crashing 1`] = `
<View
  accessible={true}
  isTVSelectable={true}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "opacity": 1,
    }
  }
>
  <Text
    style={
      Array [
        Object {
          "color": "#007bff",
          "fontSize": 14,
          "textDecorationLine": "underline",
        },
        Object {},
      ]
    }
  >
    Link
  </Text>
</View>
`;

exports[`Layout Buttons <PressBtn /> render without crashing 1`] = `
<View
  accessible={true}
  isTVSelectable={true}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "backgroundColor": "#708090",
      "borderRadius": 7,
      "height": 45,
      "marginBottom": 20,
      "marginLeft": 40,
      "marginRight": 40,
      "opacity": 1,
      "padding": 10,
    }
  }
>
  <Text
    style={
      Object {
        "color": "#fff",
        "fontSize": 22,
        "textAlign": "center",
      }
    }
  >
    
     
    SUBMIT
  </Text>
</View>
`;

exports[`Layout Buttons <SuccessBtn /> render without crashing 1`] = `
<View
  accessible={true}
  isTVSelectable={true}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "backgroundColor": "#28a745",
      "borderRadius": 7,
      "height": 45,
      "marginBottom": 20,
      "marginLeft": 40,
      "marginRight": 40,
      "opacity": 1,
      "padding": 10,
    }
  }
>
  <Text
    style={
      Object {
        "color": "#fff",
        "fontSize": 22,
        "textAlign": "center",
      }
    }
  >
    
     
    SUCCESS
  </Text>
</View>
`;

exports[`Layout FormFields <CustomSwitch /> render without crashing 1`] = `
<View
  style={
    Object {
      "flexDirection": "row",
      "marginBottom": 30,
      "marginTop": 30,
    }
  }
>
  <Text
    style={
      Array [
        Object {
          "color": "#708090",
          "fontSize": 16,
        },
        Object {
          "flex": 1,
        },
      ]
    }
  />
  <RCTSwitch
    onChange={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "height": 31,
          "width": 51,
        },
        Object {
          "flex": 1,
        },
      ]
    }
    value={false}
  />
</View>
`;

exports[`Layout FormFields <CustomTextField /> render without crashing 1`] = `
<View
  onResponderRelease={[Function]}
  onStartShouldSetResponder={[Function]}
  pointerEvents="auto"
>
  <View
    style={
      Object {
        "backgroundColor": "transparent",
        "borderBottomColor": "rgba(112, 128, 144, 1)",
        "borderBottomWidth": 0.5,
        "height": 64,
        "paddingBottom": 8,
        "paddingTop": 32,
      }
    }
  >
    <View
      style={
        Object {
          "position": "absolute",
          "top": 36,
        }
      }
    >
      <Text
        numberOfLines={1}
        style={
          Object {
            "color": "rgba(112, 128, 144, 1)",
            "fontSize": 16,
          }
        }
      >
        label
      </Text>
    </View>
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <TextInput
        allowFontScaling={true}
        autoCapitalize="sentences"
        autoCorrect={false}
        disableFullscreenUI={true}
        editable={true}
        error=""
        onBlur={[Function]}
        onChange={[Function]}
        onChangeText={[Function]}
        onContentSizeChange={[Function]}
        onFocus={[Function]}
        selectionColor="#C0C0C0"
        style={
          Array [
            Object {
              "flex": 1,
              "margin": 0,
              "padding": 0,
              "top": 2,
            },
            Object {
              "color": "#708090",
              "fontSize": 16,
              "height": 24,
              "textAlign": "left",
            },
            undefined,
          ]
        }
        underlineColorAndroid="transparent"
        value=""
      />
    </View>
  </View>
  <View
    style={
      Object {
        "flexDirection": "row",
        "height": 8,
      }
    }
  >
    <View
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "flex-start",
            "bottom": 0,
            "left": 0,
            "paddingVertical": 4,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      >
        <Text
          numberOfLines={1}
          style={
            Object {
              "backgroundColor": "transparent",
              "color": "rgb(213, 0, 0)",
              "fontSize": 0,
              "opacity": 0,
            }
          }
        >
          
        </Text>
      </View>
      <View
        style={
          Object {
            "alignItems": "flex-start",
            "bottom": 0,
            "left": 0,
            "paddingVertical": 4,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      >
        <Text
          numberOfLines={1}
          style={
            Object {
              "backgroundColor": "transparent",
              "color": "#708090",
              "fontSize": 12,
              "opacity": 1,
            }
          }
        />
      </View>
    </View>
  </View>
</View>
`;

exports[`Layout Texts <CustomText /> render without crashing 1`] = `
<Text
  style={
    Object {
      "color": "#708090",
      "fontSize": 16,
    }
  }
/>
`;

exports[`Layout Texts <ScreenTitle /> render without crashing 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexDirection": "row",
      },
      Object {
        "backgroundColor": "#708090",
        "justifyContent": "center",
        "marginBottom": 20,
        "padding": 12,
      },
    ]
  }
>
  <Text
    style={
      Array [
        Object {
          "color": "#708090",
          "fontSize": 28,
          "marginBottom": 20,
        },
        Object {
          "color": "#fff",
          "marginBottom": 0,
        },
      ]
    }
  >
    
  </Text>
</View>
`;

exports[`Layout Texts <StepProgress /> render without crashing 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexDirection": "row",
      },
      Object {
        "backgroundColor": "#708090",
        "marginBottom": 20,
        "padding": 12,
      },
    ]
  }
>
  <Text
    style={
      Array [
        Object {
          "flex": 1,
        },
        Object {
          "color": "#fff",
        },
        Object {
          "textAlign": "left",
        },
      ]
    }
  >
    0
    /
    0
  </Text>
  <Text
    style={
      Array [
        Object {
          "flex": 1,
        },
        Object {
          "color": "#fff",
        },
        Object {
          "textAlign": "right",
        },
      ]
    }
  >
    0%
  </Text>
</View>
`;

exports[`Layout Texts <StepProgress /> render without crashing with props 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexDirection": "row",
      },
      Object {
        "backgroundColor": "#708090",
        "marginBottom": 20,
        "padding": 12,
      },
    ]
  }
>
  <Text
    style={
      Array [
        Object {
          "flex": 1,
        },
        Object {
          "color": "#fff",
        },
        Object {
          "textAlign": "left",
        },
      ]
    }
  >
    10
    /
    1000
  </Text>
  <Text
    style={
      Array [
        Object {
          "flex": 1,
        },
        Object {
          "color": "#fff",
        },
        Object {
          "textAlign": "right",
        },
      ]
    }
  >
    1.00%
  </Text>
</View>
`;

exports[`Layout Texts <SubTitle /> render without crashing 1`] = `
<Text
  style={
    Array [
      Object {
        "color": "#708090",
        "fontSize": 28,
        "marginBottom": 20,
      },
      Object {
        "color": "#708090",
        "fontSize": 18,
      },
      Object {},
    ]
  }
>
  SubTitle
</Text>
`;

exports[`Layout Texts <Title /> render without crashing 1`] = `
<Text
  style={
    Array [
      Object {
        "color": "#708090",
        "fontSize": 28,
        "marginBottom": 20,
      },
      Object {},
    ]
  }
>
  Title
</Text>
`;
